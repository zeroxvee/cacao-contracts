{
  "address": "0xfB6Ad9aAD4346A41F1da655F107A0861087dc8f8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegationRegistry",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Cacao__NotEnoughFunds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Cacao__TransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Cacao__WrongIdNumber",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "delegate",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "contract_",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "name": "DelegateForToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lender",
          "type": "address"
        }
      ],
      "name": "OfferCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_offerId",
          "type": "uint256"
        }
      ],
      "name": "cancelOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "checkDelegateForToken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_collection",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "createOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        }
      ],
      "name": "delegateForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "delegateForContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        }
      ],
      "name": "delegateForToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegationRegistry",
      "outputs": [
        {
          "internalType": "contract IDelegationRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllOffers",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "enum Cacao.OfferStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct Cacao.Offer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        }
      ],
      "name": "getOfferByLender",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "offerId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collection",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "enum Cacao.OfferStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct Cacao.Offer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "offerCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "offers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "offerId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "collection",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "enum Cacao.OfferStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_delegate",
          "type": "address"
        }
      ],
      "name": "revokeDelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawByVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x77e13cdd9a00aacc4bf257c40f7922ce33597e6777a18b4771935d6c34cfccb3",
  "receipt": {
    "to": null,
    "from": "0x8144aD6Dc5E320bceBcE186fF2AB43AE74f3DcCb",
    "contractAddress": "0xfB6Ad9aAD4346A41F1da655F107A0861087dc8f8",
    "transactionIndex": 19,
    "gasUsed": "1916259",
    "logsBloom": "0x
    "blockHash": "0x030de108d59a189021e2a7ad38043106032554509e3fe2450f36fc2bc0fa58ba",
    "transactionHash": "0x77e13cdd9a00aacc4bf257c40f7922ce33597e6777a18b4771935d6c34cfccb3",
    "logs": [
      {
        "transactionIndex": 19,
        "blockNumber": 8423038,
        "transactionHash": "0x77e13cdd9a00aacc4bf257c40f7922ce33597e6777a18b4771935d6c34cfccb3",
        "address": "0xfB6Ad9aAD4346A41F1da655F107A0861087dc8f8",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008144ad6dc5e320bcebce186ff2ab43ae74f3dccb"
        ],
        "data": "0x",
        "logIndex": 36,
        "blockHash": "0x030de108d59a189021e2a7ad38043106032554509e3fe2450f36fc2bc0fa58ba"
      }
    ],
    "blockNumber": 8423038,
    "cumulativeGasUsed": "5738552",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x00000000000076A84feF008CDAbe6409d2FE638B"
  ],
  "numDeployments": 2,
  "solcInputHash": "96fd8d00322e29cf27ac51b13d4766dc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegationRegistry\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Cacao__NotEnoughFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Cacao__TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Cacao__WrongIdNumber\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegate\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contract_\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"DelegateForToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"OfferCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"}],\"name\":\"cancelOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"checkDelegateForToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_collection\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"createOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"delegateForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"delegateForContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"}],\"name\":\"delegateForToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegationRegistry\",\"outputs\":[{\"internalType\":\"contract IDelegationRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllOffers\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"enum Cacao.OfferStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct Cacao.Offer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"}],\"name\":\"getOfferByLender\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"enum Cacao.OfferStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct Cacao.Offer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"offerCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"offers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"enum Cacao.OfferStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delegate\",\"type\":\"address\"}],\"name\":\"revokeDelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawByVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cacao.sol\":\"Cacao\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Cacao.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.10;\\n\\nimport \\\"./IDelegationRegistry.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/*TODO:  1. Write funciton that recevies info out of contract to invoke delegateForToken\\n *       2. keep all the active offers that are being delegated\\n *       3. make all the functions requirements that keep ETH, track time\\n *       4. If delegation was stopped by the Lender, then ETH returned to the borrower\\n *       5. after delegation time has passed, Lender can withdraw his 90%, 10% will stay or transfered to Cacao.\\n *       6. Implement Royalties so NFT authors also benefit from every rent.\\n *\\n */\\nerror Cacao__WrongIdNumber();\\nerror Cacao__NotEnoughFunds();\\nerror Cacao__TransferFailed();\\n\\ncontract Cacao is Ownable {\\n    enum OfferStatus {\\n        NOT_INITIATED,\\n        AVALIABLE,\\n        EXECUTED,\\n        CANCELED,\\n        COMPLETED\\n    }\\n\\n    IDelegationRegistry public delegationRegistry;\\n    uint256 public offerCounter;\\n    uint256 public fee;\\n\\n    // Offers object\\n    struct Offer {\\n        uint256 offerId;\\n        uint256 tokenId;\\n        uint256 price;\\n        uint256 duration;\\n        address collection;\\n        address lender;\\n        address borrower;\\n        OfferStatus status;\\n    }\\n\\n    // array of all offers on the marketplace\\n    Offer[] public offers;\\n\\n    // delegations\\n    // mapping(address => mapping ()=> uint256)) public offers;\\n    mapping(address => Offer[]) offersByLender;\\n\\n    mapping(address => uint256) balances;\\n\\n    event OfferCreated(\\n        uint256 price,\\n        uint256 tokenId,\\n        address collection,\\n        uint256 duration,\\n        address lender\\n    );\\n\\n    event DelegateForToken(\\n        address vault,\\n        address delegate,\\n        address contract_,\\n        uint256 tokenId,\\n        bool value\\n    );\\n\\n    constructor(address _delegationRegistry) {\\n        delegationRegistry = IDelegationRegistry(_delegationRegistry);\\n    }\\n\\n    ////////////////////////*** WRITE *** ///////////////////////\\n    /////////////////////////////////////////////////////////////\\n\\n    function createOffer(\\n        uint256 _price,\\n        uint256 _tokenId,\\n        address _collection,\\n        uint256 _duration\\n    ) public {\\n        Offer memory newOffer = Offer({\\n            offerId: offerCounter,\\n            tokenId: _tokenId,\\n            price: _price,\\n            duration: _duration,\\n            collection: _collection,\\n            lender: msg.sender,\\n            borrower: address(0),\\n            status: OfferStatus.AVALIABLE\\n        });\\n        offers.push(newOffer);\\n        offersByLender[msg.sender].push(newOffer);\\n\\n        offerCounter++;\\n        emit OfferCreated(_price, _tokenId, _collection, _duration, msg.sender);\\n    }\\n\\n    function cancelOffer(uint256 _offerId) public {\\n        offers[_offerId].status = OfferStatus.CANCELED;\\n    }\\n\\n    function delegateForToken(\\n        address _delegate,\\n        address _contract,\\n        uint256 _tokenId,\\n        uint256 offerId\\n    ) public payable {\\n        if (offers[offerId].status != OfferStatus.AVALIABLE) {\\n            revert Cacao__WrongIdNumber();\\n        }\\n        if (offers[offerId].price <= msg.value) {\\n            revert Cacao__NotEnoughFunds();\\n        }\\n        bool value = true;\\n        delegationRegistry.delegateForToken(\\n            _delegate,\\n            _contract,\\n            _tokenId,\\n            value\\n        );\\n\\n        balances[msg.sender] += msg.value;\\n        offers[offerId].status = OfferStatus.EXECUTED;\\n        emit DelegateForToken(\\n            msg.sender,\\n            _delegate,\\n            _contract,\\n            _tokenId,\\n            value\\n        );\\n    }\\n\\n    function delegateForAll(address _delegate) public {\\n        bool value = true;\\n        delegationRegistry.delegateForAll(_delegate, value);\\n    }\\n\\n    function delegateForContract(address _delegate, address _contract) public {\\n        bool value = true;\\n        delegationRegistry.delegateForContract(_delegate, _contract, value);\\n    }\\n\\n    function revokeDelegate(address _delegate) public {\\n        delegationRegistry.revokeDelegate(_delegate);\\n    }\\n\\n    function withdrawFees() public onlyOwner {\\n        uint256 balance = balances[address(this)];\\n        _withdraw(balance);\\n    }\\n\\n    function withdrawByVault() public {\\n        uint256 balance = balances[msg.sender];\\n        balances[address(this)] += (balance * fee) / 100;\\n        _withdraw(balance);\\n    }\\n\\n    function _withdraw(uint256 balance) internal {\\n        balance = address(this).balance;\\n        if (balance == 0) {\\n            revert Cacao__NotEnoughFunds();\\n        }\\n        (bool callResult, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        if (!callResult) revert Cacao__TransferFailed();\\n    }\\n\\n    ////////////////////////*** READ *** ///////////////////////\\n    ////////////////////////////////////////////////////////////\\n\\n    function checkDelegateForToken(\\n        address _delegate,\\n        address _vault,\\n        address _contract,\\n        uint256 tokenId\\n    ) public view returns (bool result) {\\n        return\\n            result = delegationRegistry.checkDelegateForToken(\\n                _delegate,\\n                _vault,\\n                _contract,\\n                tokenId\\n            );\\n    }\\n\\n    function getAllOffers() public view returns (Offer[] memory) {\\n        return offers;\\n    }\\n\\n    function getOfferByLender(\\n        address lender\\n    ) public view returns (Offer[] memory) {\\n        return offersByLender[lender];\\n    }\\n}\\n\",\"keccak256\":\"0x63682eaaeb5f8ae791a9d7b5a5a68ade116f08f1e0eb387b273cb78404ce2db3\",\"license\":\"MIT\"},\"contracts/IDelegationRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: CC0-1.0\\npragma solidity ^0.8.17;\\n\\n/**\\n * @title An immutable registry contract to be deployed as a standalone primitive\\n * @dev See EIP-5639, new project launches can read previous cold wallet -> hot wallet delegations\\n *      from here and integrate those permissions into their flow\\n */\\ninterface IDelegationRegistry {\\n    /// @notice Delegation type\\n    enum DelegationType {\\n        NONE,\\n        ALL,\\n        CONTRACT,\\n        TOKEN\\n    }\\n\\n    /// @notice Info about a single delegation, used for onchain enumeration\\n    struct DelegationInfo {\\n        DelegationType type_;\\n        address vault;\\n        address delegate;\\n        address contract_;\\n        uint256 tokenId;\\n    }\\n\\n    /// @notice Info about a single contract-level delegation\\n    struct ContractDelegation {\\n        address contract_;\\n        address delegate;\\n    }\\n\\n    /// @notice Info about a single token-level delegation\\n    struct TokenDelegation {\\n        address contract_;\\n        uint256 tokenId;\\n        address delegate;\\n    }\\n\\n    /// @notice Emitted when a user delegates their entire wallet\\n    event DelegateForAll(address vault, address delegate, bool value);\\n\\n    /// @notice Emitted when a user delegates a specific contract\\n    event DelegateForContract(\\n        address vault,\\n        address delegate,\\n        address contract_,\\n        bool value\\n    );\\n\\n    /// @notice Emitted when a user delegates a specific token\\n    event DelegateForToken(\\n        address vault,\\n        address delegate,\\n        address contract_,\\n        uint256 tokenId,\\n        bool value\\n    );\\n\\n    /// @notice Emitted when a user revokes all delegations\\n    event RevokeAllDelegates(address vault);\\n\\n    /// @notice Emitted when a user revoes all delegations for a given delegate\\n    event RevokeDelegate(address vault, address delegate);\\n\\n    /**\\n     * -----------  WRITE -----------\\n     */\\n\\n    /**\\n     * @notice Allow the delegate to act on your behalf for all contracts\\n     * @param delegate The hotwallet to act on your behalf\\n     * @param value Whether to enable or disable delegation for this address, true for setting and false for revoking\\n     */\\n    function delegateForAll(address delegate, bool value) external;\\n\\n    /**\\n     * @notice Allow the delegate to act on your behalf for a specific contract\\n     * @param delegate The hotwallet to act on your behalf\\n     * @param contract_ The address for the contract you're delegating\\n     * @param value Whether to enable or disable delegation for this address, true for setting and false for revoking\\n     */\\n    function delegateForContract(\\n        address delegate,\\n        address contract_,\\n        bool value\\n    ) external;\\n\\n    /**\\n     * @notice Allow the delegate to act on your behalf for a specific token\\n     * @param delegate The hotwallet to act on your behalf\\n     * @param contract_ The address for the contract you're delegating\\n     * @param tokenId The token id for the token you're delegating\\n     * @param value Whether to enable or disable delegation for this address, true for setting and false for revoking\\n     */\\n    function delegateForToken(\\n        address delegate,\\n        address contract_,\\n        uint256 tokenId,\\n        bool value\\n    ) external;\\n\\n    /**\\n     * @notice Revoke all delegates\\n     */\\n    function revokeAllDelegates() external;\\n\\n    /**\\n     * @notice Revoke a specific delegate for all their permissions\\n     * @param delegate The hotwallet to revoke\\n     */\\n    function revokeDelegate(address delegate) external;\\n\\n    /**\\n     * @notice Remove yourself as a delegate for a specific vault\\n     * @param vault The vault which delegated to the msg.sender, and should be removed\\n     */\\n    function revokeSelf(address vault) external;\\n\\n    /**\\n     * -----------  READ -----------\\n     */\\n\\n    /**\\n     * @notice Returns all active delegations a given delegate is able to claim on behalf of\\n     * @param delegate The delegate that you would like to retrieve delegations for\\n     * @return info Array of DelegationInfo structs\\n     */\\n    function getDelegationsByDelegate(\\n        address delegate\\n    ) external view returns (DelegationInfo[] memory);\\n\\n    /**\\n     * @notice Returns an array of wallet-level delegates for a given vault\\n     * @param vault The cold wallet who issued the delegation\\n     * @return addresses Array of wallet-level delegates for a given vault\\n     */\\n    function getDelegatesForAll(\\n        address vault\\n    ) external view returns (address[] memory);\\n\\n    /**\\n     * @notice Returns an array of contract-level delegates for a given vault and contract\\n     * @param vault The cold wallet who issued the delegation\\n     * @param contract_ The address for the contract you're delegating\\n     * @return addresses Array of contract-level delegates for a given vault and contract\\n     */\\n    function getDelegatesForContract(\\n        address vault,\\n        address contract_\\n    ) external view returns (address[] memory);\\n\\n    /**\\n     * @notice Returns an array of contract-level delegates for a given vault's token\\n     * @param vault The cold wallet who issued the delegation\\n     * @param contract_ The address for the contract holding the token\\n     * @param tokenId The token id for the token you're delegating\\n     * @return addresses Array of contract-level delegates for a given vault's token\\n     */\\n    function getDelegatesForToken(\\n        address vault,\\n        address contract_,\\n        uint256 tokenId\\n    ) external view returns (address[] memory);\\n\\n    /**\\n     * @notice Returns all contract-level delegations for a given vault\\n     * @param vault The cold wallet who issued the delegations\\n     * @return delegations Array of ContractDelegation structs\\n     */\\n    function getContractLevelDelegations(\\n        address vault\\n    ) external view returns (ContractDelegation[] memory delegations);\\n\\n    /**\\n     * @notice Returns all token-level delegations for a given vault\\n     * @param vault The cold wallet who issued the delegations\\n     * @return delegations Array of TokenDelegation structs\\n     */\\n    function getTokenLevelDelegations(\\n        address vault\\n    ) external view returns (TokenDelegation[] memory delegations);\\n\\n    /**\\n     * @notice Returns true if the address is delegated to act on the entire vault\\n     * @param delegate The hotwallet to act on your behalf\\n     * @param vault The cold wallet who issued the delegation\\n     */\\n    function checkDelegateForAll(\\n        address delegate,\\n        address vault\\n    ) external view returns (bool);\\n\\n    /**\\n     * @notice Returns true if the address is delegated to act on your behalf for a token contract or an entire vault\\n     * @param delegate The hotwallet to act on your behalf\\n     * @param contract_ The address for the contract you're delegating\\n     * @param vault The cold wallet who issued the delegation\\n     */\\n    function checkDelegateForContract(\\n        address delegate,\\n        address vault,\\n        address contract_\\n    ) external view returns (bool);\\n\\n    /**\\n     * @notice Returns true if the address is delegated to act on your behalf for a specific token, the token's contract or an entire vault\\n     * @param delegate The hotwallet to act on your behalf\\n     * @param contract_ The address for the contract you're delegating\\n     * @param tokenId The token id for the token you're delegating\\n     * @param vault The cold wallet who issued the delegation\\n     */\\n    function checkDelegateForToken(\\n        address delegate,\\n        address vault,\\n        address contract_,\\n        uint256 tokenId\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf16594798806700aa5f598bf9e286e61afdb9890eccfd989adae40c570512512\",\"license\":\"CC0-1.0\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620022e4380380620022e48339818101604052810190620000379190620001d5565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000207565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019d8262000170565b9050919050565b620001af8162000190565b8114620001bb57600080fd5b50565b600081519050620001cf81620001a4565b92915050565b600060208284031215620001ee57620001ed6200016b565b5b6000620001fe84828501620001be565b91505092915050565b6120cd80620002176000396000f3fe6080604052600436106101095760003560e01c8063a7f63fe311610095578063c4687b3c11610064578063c4687b3c14610317578063ddca3f4314610354578063ef706adf1461037f578063f2fde38b146103a8578063fa352c00146103d157610109565b8063a7f63fe31461026f578063aba69cf814610298578063b7a3c1da146102d5578063b840b9e41461030057610109565b8063715018a6116100dc578063715018a6146101955780638a72ea6a146101ac5780638da5cb5b146101f0578063a16552781461021b578063a6515ba61461024657610109565b80631fbdd72d1461010e5780633c944e9314610139578063476343ee14610162578063657bcc9814610179575b600080fd5b34801561011a57600080fd5b506101236103fa565b604051610130919061165a565b60405180910390f35b34801561014557600080fd5b50610160600480360381019061015b91906116ee565b610420565b005b34801561016e57600080fd5b50610177610807565b005b610193600480360381019061018e9190611755565b61085f565b005b3480156101a157600080fd5b506101aa610ad0565b005b3480156101b857600080fd5b506101d360048036038101906101ce91906117bc565b610ae4565b6040516101e798979695949392919061187e565b60405180910390f35b3480156101fc57600080fd5b50610205610ba9565b60405161021291906118fc565b60405180910390f35b34801561022757600080fd5b50610230610bd2565b60405161023d9190611a96565b60405180910390f35b34801561025257600080fd5b5061026d60048036038101906102689190611ab8565b610d97565b005b34801561027b57600080fd5b5061029660048036038101906102919190611ae5565b610e30565b005b3480156102a457600080fd5b506102bf60048036038101906102ba9190611b25565b610ecc565b6040516102cc9190611ba7565b60405180910390f35b3480156102e157600080fd5b506102ea610f7a565b6040516102f79190611bc2565b60405180910390f35b34801561030c57600080fd5b50610315610f80565b005b34801561032357600080fd5b5061033e60048036038101906103399190611ab8565b61103f565b60405161034b9190611a96565b60405180910390f35b34801561036057600080fd5b50610369611243565b6040516103769190611bc2565b60405180910390f35b34801561038b57600080fd5b506103a660048036038101906103a191906117bc565b611249565b005b3480156103b457600080fd5b506103cf60048036038101906103ca9190611ab8565b61129a565b005b3480156103dd57600080fd5b506103f860048036038101906103f39190611ab8565b61131d565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060405180610100016040528060025481526020018581526020018681526020018381526020018473ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600160048111156104b1576104b0611807565b5b815250905060048190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160060160146101000a81548160ff0219169083600481111561060a57610609611807565b5b02179055505050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160060160146101000a81548160ff021916908360048111156107a2576107a1611807565b5b02179055505050600260008154809291906107bc90611c0c565b91905055507f6b040ede0d1cf4747b2a3e20825263e9871ffa9c80a694e62cdce2aa20c0697385858585336040516107f8959493929190611c54565b60405180910390a15050505050565b61080f6113ad565b6000600660003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061085c8161142b565b50565b6001600481111561087357610872611807565b5b6004828154811061088757610886611ca7565b5b906000526020600020906007020160060160149054906101000a900460ff1660048111156108b8576108b7611807565b5b146108ef576040517fed35e89200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346004828154811061090457610903611ca7565b5b9060005260206000209060070201600201541161094d576040517f7185cbb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060019050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663537a5c3d868686856040518563ffffffff1660e01b81526004016109b49493929190611cd6565b600060405180830381600087803b1580156109ce57600080fd5b505af11580156109e2573d6000803e3d6000fd5b5050505034600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a359190611d1b565b92505081905550600260048381548110610a5257610a51611ca7565b5b906000526020600020906007020160060160146101000a81548160ff02191690836004811115610a8557610a84611807565b5b02179055507fe89c6ba1e8957285aed22618f52aa1dcb9d5bb64e1533d8b55136c72fcf5aa5d3386868685604051610ac1959493929190611d4f565b60405180910390a15050505050565b610ad86113ad565b610ae2600061150f565b565b60048181548110610af457600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160149054906101000a900460ff16905088565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015610d8e578382906000526020600020906007020160405180610100016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160149054906101000a900460ff166004811115610d6957610d68611807565b5b6004811115610d7b57610d7a611807565b5b8152505081526020019060010190610bf6565b50505050905090565b600060019050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663685ee3e883836040518363ffffffff1660e01b8152600401610dfa929190611da2565b600060405180830381600087803b158015610e1457600080fd5b505af1158015610e28573d6000803e3d6000fd5b505050505050565b600060019050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166349c95d298484846040518463ffffffff1660e01b8152600401610e9593929190611dcb565b600060405180830381600087803b158015610eaf57600080fd5b505af1158015610ec3573d6000803e3d6000fd5b50505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aba69cf8868686866040518563ffffffff1660e01b8152600401610f2f9493929190611e02565b602060405180830381865afa158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f709190611e73565b9050949350505050565b60025481565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050606460035482610fd49190611ea0565b610fde9190611f11565b600660003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461102c9190611d1b565b9250508190555061103c8161142b565b50565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611238578382906000526020600020906007020160405180610100016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160149054906101000a900460ff16600481111561121357611212611807565b5b600481111561122557611224611807565b5b81525050815260200190600101906110a0565b505050509050919050565b60035481565b60036004828154811061125f5761125e611ca7565b5b906000526020600020906007020160060160146101000a81548160ff0219169083600481111561129257611291611807565b5b021790555050565b6112a26113ad565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130890611fc5565b60405180910390fd5b61131a8161150f565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa352c00826040518263ffffffff1660e01b815260040161137891906118fc565b600060405180830381600087803b15801561139257600080fd5b505af11580156113a6573d6000803e3d6000fd5b5050505050565b6113b56115d3565b73ffffffffffffffffffffffffffffffffffffffff166113d3610ba9565b73ffffffffffffffffffffffffffffffffffffffff1614611429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142090612031565b60405180910390fd5b565b47905060008103611468576040517f7185cbb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161148e90612082565b60006040518083038185875af1925050503d80600081146114cb576040519150601f19603f3d011682016040523d82523d6000602084013e6114d0565b606091505b505090508061150b576040517f90ada07c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061162061161b611616846115db565b6115fb565b6115db565b9050919050565b600061163282611605565b9050919050565b600061164482611627565b9050919050565b61165481611639565b82525050565b600060208201905061166f600083018461164b565b92915050565b600080fd5b6000819050919050565b61168d8161167a565b811461169857600080fd5b50565b6000813590506116aa81611684565b92915050565b60006116bb826115db565b9050919050565b6116cb816116b0565b81146116d657600080fd5b50565b6000813590506116e8816116c2565b92915050565b6000806000806080858703121561170857611707611675565b5b60006117168782880161169b565b94505060206117278782880161169b565b9350506040611738878288016116d9565b92505060606117498782880161169b565b91505092959194509250565b6000806000806080858703121561176f5761176e611675565b5b600061177d878288016116d9565b945050602061178e878288016116d9565b935050604061179f8782880161169b565b92505060606117b08782880161169b565b91505092959194509250565b6000602082840312156117d2576117d1611675565b5b60006117e08482850161169b565b91505092915050565b6117f28161167a565b82525050565b611801816116b0565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061184757611846611807565b5b50565b600081905061185882611836565b919050565b60006118688261184a565b9050919050565b6118788161185d565b82525050565b600061010082019050611894600083018b6117e9565b6118a1602083018a6117e9565b6118ae60408301896117e9565b6118bb60608301886117e9565b6118c860808301876117f8565b6118d560a08301866117f8565b6118e260c08301856117f8565b6118ef60e083018461186f565b9998505050505050505050565b600060208201905061191160008301846117f8565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61194c8161167a565b82525050565b61195b816116b0565b82525050565b61196a8161185d565b82525050565b610100820160008201516119876000850182611943565b50602082015161199a6020850182611943565b5060408201516119ad6040850182611943565b5060608201516119c06060850182611943565b5060808201516119d36080850182611952565b5060a08201516119e660a0850182611952565b5060c08201516119f960c0850182611952565b5060e0820151611a0c60e0850182611961565b50505050565b6000611a1e8383611970565b6101008301905092915050565b6000602082019050919050565b6000611a4382611917565b611a4d8185611922565b9350611a5883611933565b8060005b83811015611a89578151611a708882611a12565b9750611a7b83611a2b565b925050600181019050611a5c565b5085935050505092915050565b60006020820190508181036000830152611ab08184611a38565b905092915050565b600060208284031215611ace57611acd611675565b5b6000611adc848285016116d9565b91505092915050565b60008060408385031215611afc57611afb611675565b5b6000611b0a858286016116d9565b9250506020611b1b858286016116d9565b9150509250929050565b60008060008060808587031215611b3f57611b3e611675565b5b6000611b4d878288016116d9565b9450506020611b5e878288016116d9565b9350506040611b6f878288016116d9565b9250506060611b808782880161169b565b91505092959194509250565b60008115159050919050565b611ba181611b8c565b82525050565b6000602082019050611bbc6000830184611b98565b92915050565b6000602082019050611bd760008301846117e9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c178261167a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c4957611c48611bdd565b5b600182019050919050565b600060a082019050611c6960008301886117e9565b611c7660208301876117e9565b611c8360408301866117f8565b611c9060608301856117e9565b611c9d60808301846117f8565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000608082019050611ceb60008301876117f8565b611cf860208301866117f8565b611d0560408301856117e9565b611d126060830184611b98565b95945050505050565b6000611d268261167a565b9150611d318361167a565b9250828201905080821115611d4957611d48611bdd565b5b92915050565b600060a082019050611d6460008301886117f8565b611d7160208301876117f8565b611d7e60408301866117f8565b611d8b60608301856117e9565b611d986080830184611b98565b9695505050505050565b6000604082019050611db760008301856117f8565b611dc46020830184611b98565b9392505050565b6000606082019050611de060008301866117f8565b611ded60208301856117f8565b611dfa6040830184611b98565b949350505050565b6000608082019050611e1760008301876117f8565b611e2460208301866117f8565b611e3160408301856117f8565b611e3e60608301846117e9565b95945050505050565b611e5081611b8c565b8114611e5b57600080fd5b50565b600081519050611e6d81611e47565b92915050565b600060208284031215611e8957611e88611675565b5b6000611e9784828501611e5e565b91505092915050565b6000611eab8261167a565b9150611eb68361167a565b9250828202611ec48161167a565b91508282048414831517611edb57611eda611bdd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f1c8261167a565b9150611f278361167a565b925082611f3757611f36611ee2565b5b828204905092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611faf602683611f42565b9150611fba82611f53565b604082019050919050565b60006020820190508181036000830152611fde81611fa2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061201b602083611f42565b915061202682611fe5565b602082019050919050565b6000602082019050818103600083015261204a8161200e565b9050919050565b600081905092915050565b50565b600061206c600083612051565b91506120778261205c565b600082019050919050565b600061208d8261205f565b915081905091905056fea2646970667358221220f952e2e5dae9f04b1176ee5829b3106c28d95866b81b5a62a2d31b86ddaec3d064736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106101095760003560e01c8063a7f63fe311610095578063c4687b3c11610064578063c4687b3c14610317578063ddca3f4314610354578063ef706adf1461037f578063f2fde38b146103a8578063fa352c00146103d157610109565b8063a7f63fe31461026f578063aba69cf814610298578063b7a3c1da146102d5578063b840b9e41461030057610109565b8063715018a6116100dc578063715018a6146101955780638a72ea6a146101ac5780638da5cb5b146101f0578063a16552781461021b578063a6515ba61461024657610109565b80631fbdd72d1461010e5780633c944e9314610139578063476343ee14610162578063657bcc9814610179575b600080fd5b34801561011a57600080fd5b506101236103fa565b604051610130919061165a565b60405180910390f35b34801561014557600080fd5b50610160600480360381019061015b91906116ee565b610420565b005b34801561016e57600080fd5b50610177610807565b005b610193600480360381019061018e9190611755565b61085f565b005b3480156101a157600080fd5b506101aa610ad0565b005b3480156101b857600080fd5b506101d360048036038101906101ce91906117bc565b610ae4565b6040516101e798979695949392919061187e565b60405180910390f35b3480156101fc57600080fd5b50610205610ba9565b60405161021291906118fc565b60405180910390f35b34801561022757600080fd5b50610230610bd2565b60405161023d9190611a96565b60405180910390f35b34801561025257600080fd5b5061026d60048036038101906102689190611ab8565b610d97565b005b34801561027b57600080fd5b5061029660048036038101906102919190611ae5565b610e30565b005b3480156102a457600080fd5b506102bf60048036038101906102ba9190611b25565b610ecc565b6040516102cc9190611ba7565b60405180910390f35b3480156102e157600080fd5b506102ea610f7a565b6040516102f79190611bc2565b60405180910390f35b34801561030c57600080fd5b50610315610f80565b005b34801561032357600080fd5b5061033e60048036038101906103399190611ab8565b61103f565b60405161034b9190611a96565b60405180910390f35b34801561036057600080fd5b50610369611243565b6040516103769190611bc2565b60405180910390f35b34801561038b57600080fd5b506103a660048036038101906103a191906117bc565b611249565b005b3480156103b457600080fd5b506103cf60048036038101906103ca9190611ab8565b61129a565b005b3480156103dd57600080fd5b506103f860048036038101906103f39190611ab8565b61131d565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060405180610100016040528060025481526020018581526020018681526020018381526020018473ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600160048111156104b1576104b0611807565b5b815250905060048190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160060160146101000a81548160ff0219169083600481111561060a57610609611807565b5b02179055505050600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060e08201518160060160146101000a81548160ff021916908360048111156107a2576107a1611807565b5b02179055505050600260008154809291906107bc90611c0c565b91905055507f6b040ede0d1cf4747b2a3e20825263e9871ffa9c80a694e62cdce2aa20c0697385858585336040516107f8959493929190611c54565b60405180910390a15050505050565b61080f6113ad565b6000600660003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061085c8161142b565b50565b6001600481111561087357610872611807565b5b6004828154811061088757610886611ca7565b5b906000526020600020906007020160060160149054906101000a900460ff1660048111156108b8576108b7611807565b5b146108ef576040517fed35e89200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346004828154811061090457610903611ca7565b5b9060005260206000209060070201600201541161094d576040517f7185cbb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060019050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663537a5c3d868686856040518563ffffffff1660e01b81526004016109b49493929190611cd6565b600060405180830381600087803b1580156109ce57600080fd5b505af11580156109e2573d6000803e3d6000fd5b5050505034600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a359190611d1b565b92505081905550600260048381548110610a5257610a51611ca7565b5b906000526020600020906007020160060160146101000a81548160ff02191690836004811115610a8557610a84611807565b5b02179055507fe89c6ba1e8957285aed22618f52aa1dcb9d5bb64e1533d8b55136c72fcf5aa5d3386868685604051610ac1959493929190611d4f565b60405180910390a15050505050565b610ad86113ad565b610ae2600061150f565b565b60048181548110610af457600080fd5b90600052602060002090600702016000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160149054906101000a900460ff16905088565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805480602002602001604051908101604052809291908181526020016000905b82821015610d8e578382906000526020600020906007020160405180610100016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160149054906101000a900460ff166004811115610d6957610d68611807565b5b6004811115610d7b57610d7a611807565b5b8152505081526020019060010190610bf6565b50505050905090565b600060019050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663685ee3e883836040518363ffffffff1660e01b8152600401610dfa929190611da2565b600060405180830381600087803b158015610e1457600080fd5b505af1158015610e28573d6000803e3d6000fd5b505050505050565b600060019050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166349c95d298484846040518463ffffffff1660e01b8152600401610e9593929190611dcb565b600060405180830381600087803b158015610eaf57600080fd5b505af1158015610ec3573d6000803e3d6000fd5b50505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aba69cf8868686866040518563ffffffff1660e01b8152600401610f2f9493929190611e02565b602060405180830381865afa158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f709190611e73565b9050949350505050565b60025481565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050606460035482610fd49190611ea0565b610fde9190611f11565b600660003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461102c9190611d1b565b9250508190555061103c8161142b565b50565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611238578382906000526020600020906007020160405180610100016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016006820160149054906101000a900460ff16600481111561121357611212611807565b5b600481111561122557611224611807565b5b81525050815260200190600101906110a0565b505050509050919050565b60035481565b60036004828154811061125f5761125e611ca7565b5b906000526020600020906007020160060160146101000a81548160ff0219169083600481111561129257611291611807565b5b021790555050565b6112a26113ad565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611311576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130890611fc5565b60405180910390fd5b61131a8161150f565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa352c00826040518263ffffffff1660e01b815260040161137891906118fc565b600060405180830381600087803b15801561139257600080fd5b505af11580156113a6573d6000803e3d6000fd5b5050505050565b6113b56115d3565b73ffffffffffffffffffffffffffffffffffffffff166113d3610ba9565b73ffffffffffffffffffffffffffffffffffffffff1614611429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142090612031565b60405180910390fd5b565b47905060008103611468576040517f7185cbb900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60003373ffffffffffffffffffffffffffffffffffffffff164760405161148e90612082565b60006040518083038185875af1925050503d80600081146114cb576040519150601f19603f3d011682016040523d82523d6000602084013e6114d0565b606091505b505090508061150b576040517f90ada07c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061162061161b611616846115db565b6115fb565b6115db565b9050919050565b600061163282611605565b9050919050565b600061164482611627565b9050919050565b61165481611639565b82525050565b600060208201905061166f600083018461164b565b92915050565b600080fd5b6000819050919050565b61168d8161167a565b811461169857600080fd5b50565b6000813590506116aa81611684565b92915050565b60006116bb826115db565b9050919050565b6116cb816116b0565b81146116d657600080fd5b50565b6000813590506116e8816116c2565b92915050565b6000806000806080858703121561170857611707611675565b5b60006117168782880161169b565b94505060206117278782880161169b565b9350506040611738878288016116d9565b92505060606117498782880161169b565b91505092959194509250565b6000806000806080858703121561176f5761176e611675565b5b600061177d878288016116d9565b945050602061178e878288016116d9565b935050604061179f8782880161169b565b92505060606117b08782880161169b565b91505092959194509250565b6000602082840312156117d2576117d1611675565b5b60006117e08482850161169b565b91505092915050565b6117f28161167a565b82525050565b611801816116b0565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061184757611846611807565b5b50565b600081905061185882611836565b919050565b60006118688261184a565b9050919050565b6118788161185d565b82525050565b600061010082019050611894600083018b6117e9565b6118a1602083018a6117e9565b6118ae60408301896117e9565b6118bb60608301886117e9565b6118c860808301876117f8565b6118d560a08301866117f8565b6118e260c08301856117f8565b6118ef60e083018461186f565b9998505050505050505050565b600060208201905061191160008301846117f8565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61194c8161167a565b82525050565b61195b816116b0565b82525050565b61196a8161185d565b82525050565b610100820160008201516119876000850182611943565b50602082015161199a6020850182611943565b5060408201516119ad6040850182611943565b5060608201516119c06060850182611943565b5060808201516119d36080850182611952565b5060a08201516119e660a0850182611952565b5060c08201516119f960c0850182611952565b5060e0820151611a0c60e0850182611961565b50505050565b6000611a1e8383611970565b6101008301905092915050565b6000602082019050919050565b6000611a4382611917565b611a4d8185611922565b9350611a5883611933565b8060005b83811015611a89578151611a708882611a12565b9750611a7b83611a2b565b925050600181019050611a5c565b5085935050505092915050565b60006020820190508181036000830152611ab08184611a38565b905092915050565b600060208284031215611ace57611acd611675565b5b6000611adc848285016116d9565b91505092915050565b60008060408385031215611afc57611afb611675565b5b6000611b0a858286016116d9565b9250506020611b1b858286016116d9565b9150509250929050565b60008060008060808587031215611b3f57611b3e611675565b5b6000611b4d878288016116d9565b9450506020611b5e878288016116d9565b9350506040611b6f878288016116d9565b9250506060611b808782880161169b565b91505092959194509250565b60008115159050919050565b611ba181611b8c565b82525050565b6000602082019050611bbc6000830184611b98565b92915050565b6000602082019050611bd760008301846117e9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c178261167a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c4957611c48611bdd565b5b600182019050919050565b600060a082019050611c6960008301886117e9565b611c7660208301876117e9565b611c8360408301866117f8565b611c9060608301856117e9565b611c9d60808301846117f8565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000608082019050611ceb60008301876117f8565b611cf860208301866117f8565b611d0560408301856117e9565b611d126060830184611b98565b95945050505050565b6000611d268261167a565b9150611d318361167a565b9250828201905080821115611d4957611d48611bdd565b5b92915050565b600060a082019050611d6460008301886117f8565b611d7160208301876117f8565b611d7e60408301866117f8565b611d8b60608301856117e9565b611d986080830184611b98565b9695505050505050565b6000604082019050611db760008301856117f8565b611dc46020830184611b98565b9392505050565b6000606082019050611de060008301866117f8565b611ded60208301856117f8565b611dfa6040830184611b98565b949350505050565b6000608082019050611e1760008301876117f8565b611e2460208301866117f8565b611e3160408301856117f8565b611e3e60608301846117e9565b95945050505050565b611e5081611b8c565b8114611e5b57600080fd5b50565b600081519050611e6d81611e47565b92915050565b600060208284031215611e8957611e88611675565b5b6000611e9784828501611e5e565b91505092915050565b6000611eab8261167a565b9150611eb68361167a565b9250828202611ec48161167a565b91508282048414831517611edb57611eda611bdd565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611f1c8261167a565b9150611f278361167a565b925082611f3757611f36611ee2565b5b828204905092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611faf602683611f42565b9150611fba82611f53565b604082019050919050565b60006020820190508181036000830152611fde81611fa2565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061201b602083611f42565b915061202682611fe5565b602082019050919050565b6000602082019050818103600083015261204a8161200e565b9050919050565b600081905092915050565b50565b600061206c600083612051565b91506120778261205c565b600082019050919050565b600061208d8261205f565b915081905091905056fea2646970667358221220f952e2e5dae9f04b1176ee5829b3106c28d95866b81b5a62a2d31b86ddaec3d064736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Cacao.sol:Cacao",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 155,
        "contract": "contracts/Cacao.sol:Cacao",
        "label": "delegationRegistry",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IDelegationRegistry)786"
      },
      {
        "astId": 157,
        "contract": "contracts/Cacao.sol:Cacao",
        "label": "offerCounter",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 159,
        "contract": "contracts/Cacao.sol:Cacao",
        "label": "fee",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 181,
        "contract": "contracts/Cacao.sol:Cacao",
        "label": "offers",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(Offer)177_storage)dyn_storage"
      },
      {
        "astId": 187,
        "contract": "contracts/Cacao.sol:Cacao",
        "label": "offersByLender",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_struct(Offer)177_storage)dyn_storage)"
      },
      {
        "astId": 191,
        "contract": "contracts/Cacao.sol:Cacao",
        "label": "balances",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Offer)177_storage)dyn_storage": {
        "base": "t_struct(Offer)177_storage",
        "encoding": "dynamic_array",
        "label": "struct Cacao.Offer[]",
        "numberOfBytes": "32"
      },
      "t_contract(IDelegationRegistry)786": {
        "encoding": "inplace",
        "label": "contract IDelegationRegistry",
        "numberOfBytes": "20"
      },
      "t_enum(OfferStatus)152": {
        "encoding": "inplace",
        "label": "enum Cacao.OfferStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(Offer)177_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Cacao.Offer[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Offer)177_storage)dyn_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(Offer)177_storage": {
        "encoding": "inplace",
        "label": "struct Cacao.Offer",
        "members": [
          {
            "astId": 161,
            "contract": "contracts/Cacao.sol:Cacao",
            "label": "offerId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 163,
            "contract": "contracts/Cacao.sol:Cacao",
            "label": "tokenId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 165,
            "contract": "contracts/Cacao.sol:Cacao",
            "label": "price",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 167,
            "contract": "contracts/Cacao.sol:Cacao",
            "label": "duration",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 169,
            "contract": "contracts/Cacao.sol:Cacao",
            "label": "collection",
            "offset": 0,
            "slot": "4",
            "type": "t_address"
          },
          {
            "astId": 171,
            "contract": "contracts/Cacao.sol:Cacao",
            "label": "lender",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 173,
            "contract": "contracts/Cacao.sol:Cacao",
            "label": "borrower",
            "offset": 0,
            "slot": "6",
            "type": "t_address"
          },
          {
            "astId": 176,
            "contract": "contracts/Cacao.sol:Cacao",
            "label": "status",
            "offset": 20,
            "slot": "6",
            "type": "t_enum(OfferStatus)152"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}